{"version":3,"file":"levels.js","sources":["../src/levels.js"],"sourcesContent":["import _ from 'lodash';\nimport * as defaults from './defaults';\nimport text from './text';\nimport { BadOptionsError } from './error';\n\n// level numbers\nexport const isNumberValid = n =>\nNumber.isInteger(parseFloat(n)) && _.inRange(n, 8);\n\n/**\n * Normalize the array\n * @param arr\n * @param opts\n * @returns {*}\n */\nconst normArr = (arr, opts) => {\n  if (arr.length > 8) {\n    throw new BadOptionsError(opts, text.tooManyLevels(arr.length));\n  }\n\n  return arr.map(val => {\n    if (val && _.isString(val)) return val;\n    if (_.isNumber(val) && isFinite(val)) return val.toString();\n    if (_.isNull(val) || _.isUndefined(val)) return undefined;\n\n    throw new BadOptionsError(opts, text.levelNotString(val));\n  });\n};\n\n\n/**\n * Normalize the object\n * @param obj\n * @param opts\n */\nconst normObj = (obj, opts) => {\n  const lvlNums = _.values(obj);\n\n  for (const num of lvlNums) {\n    if (!isNumberValid(num)) {\n      throw new BadOptionsError(opts, text.invalidLevelNum(num));\n    }\n  }\n\n  const duplicates =\n      _(obj).countBy().pick(lvl => lvl > 1)\n          .keys()\n          .value();\n\n  if (duplicates.length) {\n    throw new BadOptionsError(opts, text.duplicateLevelNums(duplicates));\n  }\n\n  return _.reduce(obj, (arr, i, name) => {\n    const reducedArr = arr;\n    reducedArr[i] = name;\n    return reducedArr;\n  }, []);\n};\n\n/**\n * Main normalize function to export.\n * @param opts\n * @returns {*}\n */\nexport const normalize = (opts) => {\n  let custom = opts.levels;\n\n  if (!_.isUndefined(custom) && !_.isNull(custom) && !_.isObject(custom)) {\n    throw new BadOptionsError(opts, text.levelsNotObj(typeof custom));\n  }\n\n  if (!custom) {\n    return defaults.levels.slice();\n  }\n\n  custom = _.isArray(custom) ? normArr(custom, opts) : normObj(custom, opts);\n\n  var levels = Array.from(new Set([].concat(custom, defaults.levels)));\n  levels.length = Math.min(levels.length, 8);\n\n  const duplicates =\n      _(levels).countBy().pick(count => count > 1)\n          .keys()\n          .value();\n\n  if (duplicates.length) {\n    throw new BadOptionsError(opts, text.duplicateLevels(duplicates));\n  }\n\n  return levels;\n};\n"],"names":["levels","opts","duplicateLevels","duplicates","length","keys","value","count","countBy","pick","Math","min","concat","custom","defaults","isArray","normArr","normObj","slice","levelsNotObj","isUndefined","isNull","isObject","normalize","reducedArr","i","name","arr","reduce","obj","duplicateLevelNums","lvl","invalidLevelNum","num","isNumberValid","lvlNums","values","levelNotString","val","undefined","isNumber","isFinite","toString","isString","map","tooManyLevels","parseFloat","n","inRange"],"mappings":"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"}